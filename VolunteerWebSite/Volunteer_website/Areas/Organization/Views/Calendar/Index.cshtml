@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Organization/Views/OrgLayout.cshtml";
}
@using (Html.BeginForm("UpdateEventDate", "Calendar", FormMethod.Post, new { id = "antiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
<style>
    a {
        text-decoration: none !important;
    }

    .calendar-container {
        display: flex;
        max-width: 1200px;
        margin: 40px auto;
        gap: 20px;
        font-family: "Arial", sans-serif;
    }

    #calendar {
        flex: 2;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
    }

    .fc {
        background: #fff;
    }

    .fc-header-toolbar {
        background: #fff;
        padding: 10px;
        border-bottom: 1px solid #ddd;
    }

    .fc-button {
        background: #f0f0f0;
        color: #333;
        border: none;
        padding: 5px 10px;
        border-radius: 3px;
        text-transform: uppercase;
        font-size: 12px;
        transition: background 0.2s;
    }

        .fc-button:hover {
            background: #e0e0e0;
        }

        .fc-button.fc-today-button {
            background: #ffca28;
            color: #333;
        }

            .fc-button.fc-today-button:hover {
                background: #ffb300;
            }

    .fc-daygrid-day-number {
        color: #333;
        font-size: 14px;
    }

    .fc-daygrid-day {
        border: 1px solid #ddd;
    }

    .fc-daygrid-event {
        white-space: normal !important;
        background: #42a5f5;
        border: none;
        border-radius: 3px;
        padding: 3px;
        color: #fff;
        font-size: 11px;
        margin: 2px 0;
        text-decoration: none !important;
        cursor: move;
    }

    .fc-daygrid-event-resizer {
        display: block !important;
        background: #fff;
        border: 2px solid #1e88e5;
        border-radius: 50%;
        width: 8px;
        height: 8px;
        margin-left: -4px;
        margin-top: -4px;
    }

    .fc-daygrid-event:hover {
        background: #1e88e5;
    }

    .fc-daygrid-more-link {
        color: #1e88e5;
        font-size: 11px;
        text-decoration: none !important;
    }

        .fc-daygrid-more-link:hover {
            color: #1565c0;
        }

    .fc-popover {
        background: #fff;
        border: 1px solid #ddd;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
    }

    .fc-popover-title {
        background: #fff;
        padding: 5px;
        border-bottom: 1px solid #ddd;
        font-size: 12px;
        color: #333;
    }

    .fc-popover-body {
        padding: 5px;
    }

    .event-list {
        flex: 1;
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        border: 1px solid #ddd;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

        .event-list h3 {
            font-size: 16px;
            color: #333;
            margin-bottom: 20px;
            font-weight: bold;
            text-transform: uppercase;
        }

    .event-item {
        margin-bottom: 10px;
    }

    .event-date {
        font-size: 14px;
        color: #333;
        font-weight: bold;
        margin-top: 15px;
        margin-bottom: 5px;
        text-transform: uppercase;
    }

    .event-title {
        position: relative;
        padding-left: 15px;
        color: #333;
        font-size: 13px;
        display: block;
        line-height: 1.5;
        text-decoration: none !important;
    }

        .event-title::before {
            content: "•";
            color: #1e88e5;
            position: absolute;
            left: 0;
            top: 0;
        }

    #eventListContent {
        padding: 20px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
        font-family: 'Segoe UI', sans-serif;
    }

    .event-date {
        font-size: 14px;
        font-weight: 600;
        color: #2563eb;
        margin-bottom: 4px;
        position: relative;
        padding-left: 18px;
    }

        .event-date::before {
            content: "";
            width: 8px;
            height: 8px;
            background-color: #2563eb;
            border-radius: 50%;
            position: absolute;
            left: 0;
            top: 5px;
        }

    .event-item {
        background-color: #f9fafb;
        border-radius: 8px;
        padding: 10px 14px;
        margin-bottom: 16px;
        color: #374151;
        font-size: 15px;
        border-left: 3px solid #3b82f6;
        transition: 0.3s ease;
    }

        .event-item:hover {
            background-color: #eef2ff;
            border-left-color: #2563eb;
        }

    .event-title {
        font-weight: 500;
        font-size: 15px;
        color: #1f2937;
    }

    /* CSS cho modern-alert */
    .modern-alert {
        display: flex;
        align-items: center;
        padding: 15px;
        width: 400px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        font-family: 'Segoe UI', sans-serif;
        position: absolute;
        top: 20px;
        right: 20px;
        z-index: 9999;
        animation: slideIn 0.3s ease;
    }

    #alertContainer {
        position: fixed;
        top: 20px;
        right: 20px;
        display: flex;
        flex-direction: column;
        gap: 10px;
        z-index: 10000;
    }


        .modern-alert.success {
            background-color: #e6f4ea;
            border-left: 4px solid #34c759;
        }

        .modern-alert.error {
            background-color: #fdeded;
            border-left: 4px solid #ff3b30;
        }

    .alert-icon {
        margin-right: 15px;
        font-size: 24px;
        line-height: 1;
    }

        .alert-icon span {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            color: #fff;
            font-weight: bold;
        }

    .modern-alert.success .alert-icon span {
        background-color: #34c759;
    }

    .modern-alert.error .alert-icon span {
        background-color: #ff3b30;
    }

    .alert-content {
        flex: 1;
    }

        .alert-content strong {
            display: block;
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .alert-content p {
            margin: 0;
            font-size: 14px;
            color: #333;
        }

    .alert-close {
        margin-left: 15px;
        font-size: 20px;
        cursor: pointer;
        color: #666;
        transition: color 0.2s;
    }

        .alert-close:hover {
            color: #000;
        }

</style>

<!-- Container để hiển thị thông báo động -->
<div id="alertContainer"></div>

<!-- HTML nội dung -->
<div class="calendar-container">
    <div id="calendar"></div>
    <div class="event-list">
        <h3>Events</h3>
        <div id="eventListContent"></div>
    </div>
</div>

<!-- Scripts -->
@section Scripts {
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var eventListContent = document.getElementById('eventListContent');
            var alertContainer = document.getElementById('alertContainer');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev today',
                    center: 'title',
                    right: 'next'
                },
                events: '/Organization/Calendar/GetEventsCalendar',
                eventDataTransform: function (event) {
                    return {
                        id: event.id || event.eventId,
                        title: event.title,
                        start: event.start,
                        end: event.end,
                        description: event.description
                    };
                },
                editable: true,
                eventResizable: true,
                eventDrop: function (info) {
                    var eventId = info.event.id;
                    var startDate = info.event.start ? info.event.start.toISOString().split('T')[0] : null;
                    var endDate = info.event.end ? info.event.end.toISOString().split('T')[0] : null;

                    console.log('Event Drop Data:', { eventId, startDate, endDate });

                    if (!eventId || !startDate) {
                        showAlert('error', 'Lỗi', 'Không thể cập nhật: Thiếu thông tin eventId hoặc startDate');
                        info.revert();
                        return;
                    }

                    updateEvent(eventId, startDate, endDate);
                },
                eventResize: function (info) {
                    var eventId = info.event.id;
                    var startDate = info.event.start ? info.event.start.toISOString().split('T')[0] : null;
                    var endDate = info.event.end ? info.event.end.toISOString().split('T')[0] : null;

                    console.log('Event Resize Data:', { eventId, startDate, endDate });

                    if (!eventId || !startDate) {
                        showAlert('error', 'Lỗi', 'Không thể cập nhật: Thiếu thông tin eventId hoặc startDate');
                        info.revert();
                        return;
                    }

                    updateEvent(eventId, startDate, endDate);
                },
                eventClick: function (info) {
                    showAlert('info', 'Event', 'Event: ' + info.event.title + '<br>Description: ' + info.event.extendedProps.description);
                },
                firstDay: 0
            });

            calendar.render();

                   function showAlert(type, title, message) {
            // Xóa thông báo cũ nếu có
            alertContainer.innerHTML = '';

            // Tạo div thông báo
            const alertDiv = document.createElement('div');
            alertDiv.className = `modern-alert ${type}`;
            alertDiv.innerHTML = `
                <div class="alert-icon">
                    <span>${type === 'success' ? '✔' : type === 'error' ? '⚠' : 'ℹ'}</span>
                </div>
                <div class="alert-content">
                    <strong>${title}</strong>
                    <p>${message}</p>
                </div>
                <div class="alert-close" onclick="this.parentElement.remove()">×</div>
            `;

            alertContainer.appendChild(alertDiv);
        }


            function updateEvent(eventId, startDate, endDate) {
                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
                const params = new URLSearchParams();
                params.append('eventId', eventId);
                params.append('startDate', startDate);
                params.append('endDate', endDate || '');

                console.log('Sending to Server:', params.toString());

                fetch('/Organization/Calendar/UpdateEventDate', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: params
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('success', 'Thành công', data.message);
                        updateEventList();
                    } else {
                        showAlert('error', 'Lỗi', data.message);
                        calendar.refetchEvents();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('error', 'Lỗi', 'Đã xảy ra lỗi khi cập nhật sự kiện');
                    calendar.refetchEvents();
                });
            }

            function updateEventList() {
                fetch('/Organization/Calendar/GetEventsCalendar')
                    .then(response => response.json())
                    .then(events => {
                        console.log('Fetched Events:', events);
                        eventListContent.innerHTML = '';
                        const eventsByDate = {};
                        events.forEach(event => {
                            const date = event.start.split('T')[0];
                            if (!eventsByDate[date]) eventsByDate[date] = [];
                            eventsByDate[date].push(event);
                        });

                        for (const date in eventsByDate) {
                            const dateEvents = eventsByDate[date];
                            const dateHeader = document.createElement('div');
                            dateHeader.className = 'event-date';
                            dateHeader.textContent = new Date(date).toLocaleDateString('en-US', {
                                weekday: 'long',
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric'
                            });
                            eventListContent.appendChild(dateHeader);

                            dateEvents.forEach(event => {
                                const eventItem = document.createElement('div');
                                eventItem.className = 'event-item d-flex';
                                eventItem.innerHTML = `<span class="event-title">${event.title}</span>`;
                                eventListContent.appendChild(eventItem);
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Lỗi khi lấy sự kiện:', error);
                        showAlert('error', 'Lỗi', 'Đã xảy ra lỗi khi lấy danh sách sự kiện');
                    });
            }

            updateEventList();
        });
    </script>
}