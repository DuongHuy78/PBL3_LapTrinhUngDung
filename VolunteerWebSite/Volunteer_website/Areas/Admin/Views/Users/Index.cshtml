@model X.PagedList.IPagedList<Volunteer_website.Models.User>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Users Management";
    Layout = "~/Areas/Admin/Views/AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Phần tiêu đề -->
    <div class="header-section border rounded p-4 mb-4" style="background-color: #ffffff;">
        <h1 class="text-center my-4 heading-title">Quản lý người dùng</h1>
    </div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fa-solid fa-circle-check me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fa-solid fa-circle-exclamation me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Phần thân -->
    <div class="body-section border rounded p-4" style="background-color: #ffffff;">
        <!-- Search Bar and Create Button -->
        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
            <div class="search-container">
                <label for="searchBox">Tìm: </label>
                <input type="text" id="searchBox" class="form-control search-input" placeholder="Tìm kiếm ở đây" onkeyup="search()">
            </div>
        </div>

        <!-- Users List Table -->
        <div class="table-responsive">
            <table class="table table-bordered table-hover event-table shadow-sm">
                <thead class="table-dark">
                    <tr>
                        <th>Tên</th>
                        <th>Quyền</th>
                        <th>Trạng thái</th>
                        <th>Ngày tạo tài khoản</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="5" class="text-center">Không có người dùng nào được tìm thấy</td>
                    </tr>
                }
                else
                {
                    <tbody id="dataTable">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.UserName</td>
                                <td>
                                    <span class="badge @(item.Role == 2 ? "bg-danger" : item.Role == 1 ? "bg-primary" : "bg-success")">
                                        @(item.Role == 2 ? "Quản trị viên" : item.Role == 1 ? "Tổ chức" : "Tình nguyện viên")
                                    </span>
                                </td>
                                <td>
                                    @if (item.IsActive == true)
                                    {
                                        <span class="badge bg-success">Đang hoạt động</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Không hoạt động</span>
                                    }
                                </td>
                                <td>@item.CreateAt?.ToString("dd/MM/yyyy")</td>
                               
                                    @if(item.Role != 2) {
                                    <td class="action_btn">
                                        @if (item.IsActive == true)
                                        {
                                            <button class="btn btn-danger btn-sm action-btn" onclick="BanUser('@item.UserId')">
                                                <i class="fa-solid fa-ban"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-success btn-sm action-btn" onclick="UnBanUser('@item.UserId')">
                                                <i class="fa-solid fa-unlock"></i>
                                            </button>
                                        }
                                        <button class="btn btn-success btn-sm action-btn" onclick="confirmAcceptToAdmin('@item.UserId')">
                                            <i class="fa-solid bi-person-fill-up"></i>
                                        </button>
                                         </td>
                                    }
                                    else {

                                    }
                               
                            </tr>
                        }
                    </tbody>
                }
            </table>
        </div>
    </div>
    <div class="pagination d-flex justify-content-center mt-5 custom-pagination">
        @if (Model!.HasPreviousPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" class="pagination-link rounded">«</a>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <a href="@Url.Action("Index", new { page = i })" class="pagination-link rounded @(i == Model.PageNumber ? "active" : "")">@i</a>
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" class="pagination-link rounded">»</a>
        }
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/OrgLayout/Search.js"></script>
<script src="/OrgLayout/approvalVolunteer.js"></script>
<script src="/OrgLayout/PromoteToAdmin.js"></script>
