@{
    Layout = "_Layout";
}

<!DOCTYPE html>
<html>
<head>
    <title>Bản đồ sự kiện với Nominatim & Google Maps</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body, html {
            height: 100vh;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #fef7e6;
        }

        #event-list {
            height: 100vh;
            overflow-y: auto;
            padding: 20px;
            border-right: 3px solid #ff6200;
            background-color: white;
            box-shadow: 3px 0 10px rgba(255, 98, 0, 0.1);
        }

        #map {
            height: 100vh;
            width: 100%;
        }

        .event-item {
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
            transition: background-color 0.3s ease, color 0.3s ease;
            cursor: pointer;
        }

            .event-item:hover {
                background-color: #ff6200;
                color: white;
                border-radius: 8px;
            }

                .event-item:hover .event-title,
                .event-item:hover .event-address,
                .event-item:hover .event-date {
                    color: white;
                }

        .event-title {
            font-weight: 700;
            text-transform: uppercase;
            font-size: 1rem;
            color: #e65100;
            margin-bottom: 4px;
            transition: color 0.3s ease;
        }

        .event-address {
            font-size: 0.875rem;
            color: #555;
            transition: color 0.3s ease;
        }

        .event-date {
            font-size: 0.875rem;
            color: #555;
            transition: color 0.3s ease;
        }

        #search-box {
            margin-bottom: 20px;
            border: 2px solid #ff6200;
            border-radius: 6px;
            padding: 8px 12px;
            font-size: 1rem;
            width: 100%;
            box-sizing: border-box;
        }

        /* Tab Styling */
        .nav-tabs {
            border-bottom: 2px solid #ff6200;
            margin-bottom: 20px;
        }

            .nav-tabs .nav-link {
                color: #ff6200;
                font-weight: 600;
                padding: 10px 20px;
                border: none;
                transition: background-color 0.3s ease;
            }

                .nav-tabs .nav-link.active {
                    background-color: #ff6200;
                    color: white;
                    border-radius: 6px 6px 0 0;
                }

                .nav-tabs .nav-link:hover {
                    background-color: #ffe0b2;
                    color: #e65100;
                }
    </style>
</head>
<body>
    <div class="container-fluid h-100">
        <div class="row h-100">
            <!-- Cột trái: tìm kiếm + danh sách -->
            <div id="event-list" class="col-md-4 col-12">
                <h4 class="mb-3" style="color:#dc3545; font-weight: 700;">Danh sách sự kiện</h4>
                <input type="text"
                       id="search-box"
                       placeholder="Tìm kiếm sự kiện..."
                       oninput="filterEvents()" />

                <!-- Tabs for event categories -->
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-status="Ongoing" onclick="filterByStatus('Ongoing')">Đang diễn ra</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-status="Upcoming" onclick="filterByStatus('Upcoming')">Sắp diễn ra</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-status="Ended" onclick="filterByStatus('Ended')">Đã kết thúc</a>
                    </li>
                </ul>

                <div id="events-container">
                    <p>Đang tải danh sách sự kiện...</p>
                </div>
            </div>

            <!-- Cột phải: bản đồ -->
            <div class="col-8 p-0">
                <div id="map"></div>
            </div>
        </div>
    </div>

    <script>
        let map;
        let allEvents = [];
        let markers = [];

        function initMap() {
            const defaultLocation = { lat: 21.0285, lng: 105.8542 }; // Trung tâm Hà Nội

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 6,
                center: defaultLocation,
            });

            // Load events on map load
            loadEvents();
        }

        function loadEvents() {
            fetch("/Map/GetEvents")
                .then(response => response.json())
                .then(events => {
                    allEvents = events; // Store all events for filtering
                    filterByStatus('Ongoing'); // Default to Ongoing events
                })
                .catch(err => {
                    console.error("Lỗi khi lấy danh sách sự kiện:", err);
                    document.getElementById("events-container").innerHTML = "<p>Không thể tải danh sách sự kiện.</p>";
                });
        }

        function clearMarkers() {
            markers.forEach(marker => marker.setMap(null));
            markers = [];
        }

        function addMarkers(events) {
            clearMarkers();
            events.forEach(event => {
                const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(event.address)}&format=json&limit=1`;
                fetch(url)
                    .then(res => res.json())
                    .then(data => {
                        if (data && data.length > 0) {
                            const lat = parseFloat(data[0].lat);
                            const lon = parseFloat(data[0].lon);
                            const marker = new google.maps.Marker({
                                position: { lat: lat, lng: lon },
                                map: map,
                                title: event.name
                            });
                            markers.push(marker);
                        }
                    })
                    .catch(err => {
                        console.warn("Lỗi khi gọi Nominatim API:", err);
                    });
            });
        }

        function renderEventList(events) {
            const container = document.getElementById("events-container");
            container.innerHTML = "";

            if (events.length === 0) {
                container.innerHTML = "<p>Không tìm thấy sự kiện nào.</p>";
                return;
            }

            events.forEach(event => {
                const eventDiv = document.createElement("div");
                eventDiv.classList.add("event-item");

                const title = document.createElement("div");
                title.classList.add("event-title");
                title.textContent = event.name;

                const address = document.createElement("div");
                address.classList.add("event-address");
                address.textContent = event.address;

                const dateBegin = document.createElement("div");
                dateBegin.classList.add("event-date");
                dateBegin.textContent = event.dayBegin
                    ? new Date(event.dayBegin).toLocaleDateString('vi-VN', {
                        day: '2-digit',
                        month: '2-digit',
                        year: 'numeric'
                    })
                    : "N/A";

                eventDiv.appendChild(title);
                eventDiv.appendChild(address);
                eventDiv.appendChild(dateBegin);
                container.appendChild(eventDiv);
            });

            // Update markers on the map
            addMarkers(events);
        }

        function filterEvents() {
            const query = document.getElementById("search-box").value.toLowerCase();
            const activeTab = document.querySelector(".nav-tabs .nav-link.active");
            const status = activeTab ? activeTab.getAttribute("data-status") : "Ongoing";
            const filtered = allEvents.filter(e =>
                (e.name.toLowerCase().includes(query) || e.address.toLowerCase().includes(query)) &&
                e.status === status
            );
            renderEventList(filtered);
        }

        function filterByStatus(status) {
            // Update active tab
            document.querySelectorAll(".nav-tabs .nav-link").forEach(tab => {
                tab.classList.remove("active");
                if (tab.getAttribute("data-status") === status) {
                    tab.classList.add("active");
                }
            });

            const query = document.getElementById("search-box").value.toLowerCase();
            const filtered = allEvents.filter(e =>
                (e.name.toLowerCase().includes(query) || e.address.toLowerCase().includes(query)) &&
                e.status === status
            );
            renderEventList(filtered);
        }

        // Load events when the page is ready
        document.addEventListener("DOMContentLoaded", () => {
            // Already handled by initMap
        });
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAhouNsHILTOBnoHIaIRaoshOXGC6D5pYM&callback=initMap">
    </script>
</body>
</html>